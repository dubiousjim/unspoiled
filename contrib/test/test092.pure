using set,dict,system;
// walkstream s n = printf "-: %s\n" (str s) $$ tick s 0 with tick s m = () if m == n; = s!![m] $$ printf "%d: %s\n" (m, str s) $$ tick s (m+1); end;
// odd x = x mod 2; even x = ~odd x;

let lst = [1,1,1,2,2,3,4,5,5,6,6,6];
let lst2= lst+["\0x1","\0x1","\0x6","\0x6"];
let ds,db,dhs,dhb = set lst, bag lst, hset lst2, hbag lst2;
let lst3=[1=>11,1=>12,1=>13,2=>21,2=>22,3=>30,4=>40,5=>51,5=>52,6=>61,6=>62,6=>63];
let lst4=lst3+["\0x1"=>101,"\0x1"=>102,"\0x6"=>601,"\0x6"=>602];
let dk,dm,dhk,dhm=dict lst3, mdict lst3, hdict lst4, hmdict lst4;

let f = (:);
public a g p;

let d = ds; members d; list (stream d); list (revstream d); foldl f a d; foldl1 f d; foldr f a d; foldr1 f d; any p d; all p d; "---------------"; list (mstream d); list (revmstream d); mfoldl g a d; mfoldl1 g d; mfoldr g a d; mfoldr1 g d; many p d; mall p d;
let d = db; members d; list (stream d); list (revstream d); foldl f a d; foldl1 f d; foldr f a d; foldr1 f d; any p d; all p d; "---------------"; list (mstream d); list (revmstream d); mfoldl g a d; mfoldl1 g d; mfoldr g a d; mfoldr1 g d; many p d; mall p d;
let d = dhs; members d; list (stream d); list (revstream d); foldl f a d; foldl1 f d; foldr f a d; foldr1 f d; any p d; all p d; "---------------"; list (mstream d); list (revmstream d); mfoldl g a d; mfoldl1 g d; mfoldr g a d; mfoldr1 g d; many p d; mall p d;
let d = dhb; members d; list (stream d); list (revstream d); foldl f a d; foldl1 f d; foldr f a d; foldr1 f d; any p d; all p d; "---------------"; list (mstream d); list (revmstream d); mfoldl g a d; mfoldl1 g d; mfoldr g a d; mfoldr1 g d; many p d; mall p d;

let d = dk; members d; list (stream d); list (revstream d); foldl f a d; foldl1 f d; foldr f a d; foldr1 f d; any p d; all p d; "---------------"; list (mstream d); list (revmstream d); mfoldl g a d; mfoldl1 g d; mfoldr g a d; mfoldr1 g d; many p d; mall p d;
let d = dm; members d; list (stream d); list (revstream d); foldl f a d; foldl1 f d; foldr f a d; foldr1 f d; any p d; all p d; "---------------"; list (mstream d); list (revmstream d); mfoldl g a d; mfoldl1 g d; mfoldr g a d; mfoldr1 g d; many p d; mall p d;
let d = dhk; members d; list (stream d); list (revstream d); foldl f a d; foldl1 f d; foldr f a d; foldr1 f d; any p d; all p d; "---------------"; list (mstream d); list (revmstream d); mfoldl g a d; mfoldl1 g d; mfoldr g a d; mfoldr1 g d; many p d; mall p d;
let d = dhm; members d; list (stream d); list (revstream d); foldl f a d; foldl1 f d; foldr f a d; foldr1 f d; any p d; all p d; "---------------"; list (mstream d); list (revmstream d); mfoldl g a d; mfoldl1 g d; mfoldr g a d; mfoldr1 g d; many p d; mall p d;

let lst = [1,1,1,2,2,3,4,5,5,6,6,6];
{
  rule #0: lst2 = lst+["\0x1","\0x1","\0x6","\0x6"]
  state 0: #0
	<var> state 1
  state 1: #0
}
let lst2 = lst+["\0x1","\0x1","\0x6","\0x6"];
{
  rule #0: ds,db,dhs,dhb = set lst,bag lst,hset lst2,hbag lst2
  state 0: #0
	<app> state 1
  state 1: #0
	<app> state 2
  state 2: #0
	, state 3
  state 3: #0
	<var> state 4
  state 4: #0
	<app> state 5
  state 5: #0
	<app> state 6
  state 6: #0
	, state 7
  state 7: #0
	<var> state 8
  state 8: #0
	<app> state 9
  state 9: #0
	<app> state 10
  state 10: #0
	, state 11
  state 11: #0
	<var> state 12
  state 12: #0
	<var> state 13
  state 13: #0
}
let ds,db,dhs,dhb = set lst,bag lst,hset lst2,hbag lst2;
let lst3 = [1=>11,1=>12,1=>13,2=>21,2=>22,3=>30,4=>40,5=>51,5=>52,6=>61,6=>62,6=>63];
{
  rule #0: lst4 = lst3+["\0x1"=>101,"\0x1"=>102,"\0x6"=>601,"\0x6"=>602]
  state 0: #0
	<var> state 1
  state 1: #0
}
let lst4 = lst3+["\0x1"=>101,"\0x1"=>102,"\0x6"=>601,"\0x6"=>602];
{
  rule #0: dk,dm,dhk,dhm = dict lst3,mdict lst3,hdict lst4,hmdict lst4
  state 0: #0
	<app> state 1
  state 1: #0
	<app> state 2
  state 2: #0
	, state 3
  state 3: #0
	<var> state 4
  state 4: #0
	<app> state 5
  state 5: #0
	<app> state 6
  state 6: #0
	, state 7
  state 7: #0
	<var> state 8
  state 8: #0
	<app> state 9
  state 9: #0
	<app> state 10
  state 10: #0
	, state 11
  state 11: #0
	<var> state 12
  state 12: #0
	<var> state 13
  state 13: #0
}
let dk,dm,dhk,dhm = dict lst3,mdict lst3,hdict lst4,hmdict lst4;
let f = (:);
let d = ds;
members d;
[1,2,3,4,5,6]
list (stream d);
[1,2,3,4,5,6]
list (revstream d);
[6,5,4,3,2,1]
foldl f a d;
(((((a:1):2):3):4):5):6
foldl1 f d;
((((1:2):3):4):5):6
foldr f a d;
1:2:3:4:5:6:a
foldr1 f d;
1:2:3:4:5:6
any p d;
p 4||(p 2||(p 1||0)||p 3||0)||p 5||p 6||0
all p d;
((((p 4&&p 2)&&p 1)&&p 3)&&p 5)&&p 6
"---------------";
"---------------"
list (mstream d);
[[1],[2],[3],[4],[5],[6]]
list (revmstream d);
[[6],[5],[4],[3],[2],[1]]
mfoldl g a d;
g (g (g (g (g (g a [1]) [2]) [3]) [4]) [5]) [6]
mfoldl1 g d;
g (g (g (g (g [1] [2]) [3]) [4]) [5]) [6]
mfoldr g a d;
g [1] (g [2] (g [3] (g [4] (g [5] (g [6] a)))))
mfoldr1 g d;
g [1] (g [2] (g [3] (g [4] (g [5] [6]))))
many p d;
p [4]||(p [2]||(p [1]||0)||p [3]||0)||p [5]||p [6]||0
mall p d;
((((p [4]&&p [2])&&p [1])&&p [3])&&p [5])&&p [6]
let d = db;
members d;
[1,1,1,2,2,3,4,5,5,6,6,6]
list (stream d);
[1,1,1,2,2,3,4,5,5,6,6,6]
list (revstream d);
[6,6,6,5,5,4,3,2,2,1,1,1]
foldl f a d;
(((((((((((a:1):1):1):2):2):3):4):5):5):6):6):6
foldl1 f d;
((((((((((1:1):1):2):2):3):4):5):5):6):6):6
foldr f a d;
1:1:1:2:2:3:4:5:5:6:6:6:a
foldr1 f d;
1:1:1:2:2:3:4:5:5:6:6:6
any p d;
(p 4||0)||((p 2||p 2||0)||((p 1||p 1||p 1||0)||0)||(p 3||0)||0)||(p 5||p 5||0)||(p 6||p 6||p 6||0)||0
all p d;
((((p 4&&p 2&&p 2)&&(p 1&&p 1)&&p 1)&&p 3)&&p 5&&p 5)&&(p 6&&p 6)&&p 6
"---------------";
"---------------"
list (mstream d);
[[1,1,1],[2,2],[3],[4],[5,5],[6,6,6]]
list (revmstream d);
[[6,6,6],[5,5],[4],[3],[2,2],[1,1,1]]
mfoldl g a d;
g (g (g (g (g (g a [1,1,1]) [2,2]) [3]) [4]) [5,5]) [6,6,6]
mfoldl1 g d;
g (g (g (g (g [1,1,1] [2,2]) [3]) [4]) [5,5]) [6,6,6]
mfoldr g a d;
g [1,1,1] (g [2,2] (g [3] (g [4] (g [5,5] (g [6,6,6] a)))))
mfoldr1 g d;
g [1,1,1] (g [2,2] (g [3] (g [4] (g [5,5] [6,6,6]))))
many p d;
p [4]||(p [2,2]||(p [1,1,1]||0)||p [3]||0)||p [5,5]||p [6,6,6]||0
mall p d;
((((p [4]&&p [2,2])&&p [1,1,1])&&p [3])&&p [5,5])&&p [6,6,6]
let d = dhs;
members d;
[1,"\0x1",2,3,4,5,6,"\0x6"]
list (stream d);
[1,"\0x1",2,3,4,5,6,"\0x6"]
list (revstream d);
["\0x6",6,5,4,3,2,"\0x1",1]
foldl f a d;
(((((((a:1):"\0x1"):2):3):4):5):6):"\0x6"
foldl1 f d;
((((((1:"\0x1"):2):3):4):5):6):"\0x6"
foldr f a d;
1:"\0x1":2:3:4:5:6:"\0x6":a
foldr1 f d;
1:"\0x1":2:3:4:5:6:"\0x6"
any p d;
(p 4||0)||((p 2||0)||((p 1||p "\0x1"||0)||0)||(p 3||0)||0)||(p 5||0)||(p 6||p "\0x6"||0)||0
all p d;
((((p 4&&p 2)&&p 1&&p "\0x1")&&p 3)&&p 5)&&p 6&&p "\0x6"
"---------------";
"---------------"
list (mstream d);
[[1],["\0x1"],[2],[3],[4],[5],[6],["\0x6"]]
list (revmstream d);
[["\0x6"],[6],[5],[4],[3],[2],["\0x1"],[1]]
mfoldl g a d;
g (g (g (g (g (g (g (g a [1]) ["\0x1"]) [2]) [3]) [4]) [5]) [6]) ["\0x6"]
mfoldl1 g d;
g (g (g (g (g (g (g [1] ["\0x1"]) [2]) [3]) [4]) [5]) [6]) ["\0x6"]
mfoldr g a d;
g [1] (g ["\0x1"] (g [2] (g [3] (g [4] (g [5] (g [6] (g ["\0x6"] a)))))))
mfoldr1 g d;
g [1] (g ["\0x1"] (g [2] (g [3] (g [4] (g [5] (g [6] ["\0x6"]))))))
many p d;
(p [4]||0)||((p [2]||0)||((p [1]||p ["\0x1"]||0)||0)||(p [3]||0)||0)||(p [5]||0)||(p [6]||p ["\0x6"]||0)||0
mall p d;
((((p [4]&&p [2])&&p [1]&&p ["\0x1"])&&p [3])&&p [5])&&p [6]&&p ["\0x6"]
let d = dhb;
members d;
[1,1,1,"\0x1","\0x1",2,2,3,4,5,5,6,6,6,"\0x6","\0x6"]
list (stream d);
[1,1,1,"\0x1","\0x1",2,2,3,4,5,5,6,6,6,"\0x6","\0x6"]
list (revstream d);
["\0x6","\0x6",6,6,6,5,5,4,3,2,2,"\0x1","\0x1",1,1,1]
foldl f a d;
(((((((((((((((a:1):1):1):"\0x1"):"\0x1"):2):2):3):4):5):5):6):6):6):"\0x6"):"\0x6"
foldl1 f d;
((((((((((((((1:1):1):"\0x1"):"\0x1"):2):2):3):4):5):5):6):6):6):"\0x6"):"\0x6"
foldr f a d;
1:1:1:"\0x1":"\0x1":2:2:3:4:5:5:6:6:6:"\0x6":"\0x6":a
foldr1 f d;
1:1:1:"\0x1":"\0x1":2:2:3:4:5:5:6:6:6:"\0x6":"\0x6"
any p d;
(p 4||0)||((p 2||p 2||0)||((p 1||p 1||p 1||p "\0x1"||p "\0x1"||0)||0)||(p 3||0)||0)||(p 5||p 5||0)||(p 6||p 6||p 6||p "\0x6"||p "\0x6"||0)||0
all p d;
((((p 4&&p 2&&p 2)&&(((p 1&&p 1)&&p 1)&&p "\0x1")&&p "\0x1")&&p 3)&&p 5&&p 5)&&(((p 6&&p 6)&&p 6)&&p "\0x6")&&p "\0x6"
"---------------";
"---------------"
list (mstream d);
[[1,1,1],["\0x1","\0x1"],[2,2],[3],[4],[5,5],[6,6,6],["\0x6","\0x6"]]
list (revmstream d);
[["\0x6","\0x6"],[6,6,6],[5,5],[4],[3],[2,2],["\0x1","\0x1"],[1,1,1]]
mfoldl g a d;
g (g (g (g (g (g (g (g a [1,1,1]) ["\0x1","\0x1"]) [2,2]) [3]) [4]) [5,5]) [6,6,6]) ["\0x6","\0x6"]
mfoldl1 g d;
g (g (g (g (g (g (g [1,1,1] ["\0x1","\0x1"]) [2,2]) [3]) [4]) [5,5]) [6,6,6]) ["\0x6","\0x6"]
mfoldr g a d;
g [1,1,1] (g ["\0x1","\0x1"] (g [2,2] (g [3] (g [4] (g [5,5] (g [6,6,6] (g ["\0x6","\0x6"] a)))))))
mfoldr1 g d;
g [1,1,1] (g ["\0x1","\0x1"] (g [2,2] (g [3] (g [4] (g [5,5] (g [6,6,6] ["\0x6","\0x6"]))))))
many p d;
(p [4]||0)||((p [2,2]||0)||((p [1,1,1]||p ["\0x1","\0x1"]||0)||0)||(p [3]||0)||0)||(p [5,5]||0)||(p [6,6,6]||p ["\0x6","\0x6"]||0)||0
mall p d;
((((p [4]&&p [2,2])&&p [1,1,1]&&p ["\0x1","\0x1"])&&p [3])&&p [5,5])&&p [6,6,6]&&p ["\0x6","\0x6"]
let d = dk;
members d;
[1=>13,2=>22,3=>30,4=>40,5=>52,6=>63]
list (stream d);
[1=>13,2=>22,3=>30,4=>40,5=>52,6=>63]
list (revstream d);
[6=>63,5=>52,4=>40,3=>30,2=>22,1=>13]
foldl f a d;
(((((a:(1=>13)):(2=>22)):(3=>30)):(4=>40)):(5=>52)):(6=>63)
foldl1 f d;
(((((1=>13):(2=>22)):(3=>30)):(4=>40)):(5=>52)):(6=>63)
foldr f a d;
(1=>13):(2=>22):(3=>30):(4=>40):(5=>52):(6=>63):a
foldr1 f d;
(1=>13):(2=>22):(3=>30):(4=>40):(5=>52):(6=>63)
any p d;
p (4=>40)||(p (2=>22)||(p (1=>13)||0)||p (3=>30)||0)||p (5=>52)||p (6=>63)||0
all p d;
((((p (4=>40)&&p (2=>22))&&p (1=>13))&&p (3=>30))&&p (5=>52))&&p (6=>63)
"---------------";
"---------------"
list (mstream d);
[1=>[13],2=>[22],3=>[30],4=>[40],5=>[52],6=>[63]]
list (revmstream d);
[6=>[63],5=>[52],4=>[40],3=>[30],2=>[22],1=>[13]]
mfoldl g a d;
g (g (g (g (g (g a (1=>[13])) (2=>[22])) (3=>[30])) (4=>[40])) (5=>[52])) (6=>[63])
mfoldl1 g d;
g (g (g (g (g (1=>[13]) (2=>[22])) (3=>[30])) (4=>[40])) (5=>[52])) (6=>[63])
mfoldr g a d;
g (1=>[13]) (g (2=>[22]) (g (3=>[30]) (g (4=>[40]) (g (5=>[52]) (g (6=>[63]) a)))))
mfoldr1 g d;
g (1=>[13]) (g (2=>[22]) (g (3=>[30]) (g (4=>[40]) (g (5=>[52]) (6=>[63])))))
many p d;
p (4=>[40])||(p (2=>[22])||(p (1=>[13])||0)||p (3=>[30])||0)||p (5=>[52])||p (6=>[63])||0
mall p d;
((((p (4=>[40])&&p (2=>[22]))&&p (1=>[13]))&&p (3=>[30]))&&p (5=>[52]))&&p (6=>[63])
let d = dm;
members d;
[1=>11,1=>12,1=>13,2=>21,2=>22,3=>30,4=>40,5=>51,5=>52,6=>61,6=>62,6=>63]
list (stream d);
[1=>11,1=>12,1=>13,2=>21,2=>22,3=>30,4=>40,5=>51,5=>52,6=>61,6=>62,6=>63]
list (revstream d);
[6=>63,6=>62,6=>61,5=>52,5=>51,4=>40,3=>30,2=>22,2=>21,1=>13,1=>12,1=>11]
foldl f a d;
(((((((((((a:(1=>11)):(1=>12)):(1=>13)):(2=>21)):(2=>22)):(3=>30)):(4=>40)):(5=>51)):(5=>52)):(6=>61)):(6=>62)):(6=>63)
foldl1 f d;
(((((((((((1=>11):(1=>12)):(1=>13)):(2=>21)):(2=>22)):(3=>30)):(4=>40)):(5=>51)):(5=>52)):(6=>61)):(6=>62)):(6=>63)
foldr f a d;
(1=>11):(1=>12):(1=>13):(2=>21):(2=>22):(3=>30):(4=>40):(5=>51):(5=>52):(6=>61):(6=>62):(6=>63):a
foldr1 f d;
(1=>11):(1=>12):(1=>13):(2=>21):(2=>22):(3=>30):(4=>40):(5=>51):(5=>52):(6=>61):(6=>62):(6=>63)
any p d;
(p (4=>40)||0)||((p (2=>21)||p (2=>22)||0)||((p (1=>11)||p (1=>12)||p (1=>13)||0)||0)||(p (3=>30)||0)||0)||(p (5=>51)||p (5=>52)||0)||(p (6=>61)||p (6=>62)||p (6=>63)||0)||0
all p d;
((((p (4=>40)&&p (2=>21)&&p (2=>22))&&(p (1=>11)&&p (1=>12))&&p (1=>13))&&p (3=>30))&&p (5=>51)&&p (5=>52))&&(p (6=>61)&&p (6=>62))&&p (6=>63)
"---------------";
"---------------"
list (mstream d);
[1=>[11,12,13],2=>[21,22],3=>[30],4=>[40],5=>[51,52],6=>[61,62,63]]
list (revmstream d);
[6=>[63,62,61],5=>[52,51],4=>[40],3=>[30],2=>[22,21],1=>[13,12,11]]
mfoldl g a d;
g (g (g (g (g (g a (1=>[11,12,13])) (2=>[21,22])) (3=>[30])) (4=>[40])) (5=>[51,52])) (6=>[61,62,63])
mfoldl1 g d;
g (g (g (g (g (1=>[11,12,13]) (2=>[21,22])) (3=>[30])) (4=>[40])) (5=>[51,52])) (6=>[61,62,63])
mfoldr g a d;
g (1=>[11,12,13]) (g (2=>[21,22]) (g (3=>[30]) (g (4=>[40]) (g (5=>[51,52]) (g (6=>[61,62,63]) a)))))
mfoldr1 g d;
g (1=>[11,12,13]) (g (2=>[21,22]) (g (3=>[30]) (g (4=>[40]) (g (5=>[51,52]) (6=>[61,62,63])))))
many p d;
p (4=>[40])||(p (2=>[21,22])||(p (1=>[11,12,13])||0)||p (3=>[30])||0)||p (5=>[51,52])||p (6=>[61,62,63])||0
mall p d;
((((p (4=>[40])&&p (2=>[21,22]))&&p (1=>[11,12,13]))&&p (3=>[30]))&&p (5=>[51,52]))&&p (6=>[61,62,63])
let d = dhk;
members d;
[1=>13,"\0x1"=>102,2=>22,3=>30,4=>40,5=>52,6=>63,"\0x6"=>602]
list (stream d);
[1=>13,"\0x1"=>102,2=>22,3=>30,4=>40,5=>52,6=>63,"\0x6"=>602]
list (revstream d);
["\0x6"=>602,6=>63,5=>52,4=>40,3=>30,2=>22,"\0x1"=>102,1=>13]
foldl f a d;
(((((((a:(1=>13)):("\0x1"=>102)):(2=>22)):(3=>30)):(4=>40)):(5=>52)):(6=>63)):("\0x6"=>602)
foldl1 f d;
(((((((1=>13):("\0x1"=>102)):(2=>22)):(3=>30)):(4=>40)):(5=>52)):(6=>63)):("\0x6"=>602)
foldr f a d;
(1=>13):("\0x1"=>102):(2=>22):(3=>30):(4=>40):(5=>52):(6=>63):("\0x6"=>602):a
foldr1 f d;
(1=>13):("\0x1"=>102):(2=>22):(3=>30):(4=>40):(5=>52):(6=>63):("\0x6"=>602)
any p d;
(p (4=>40)||0)||((p (2=>22)||0)||((p (1=>13)||p ("\0x1"=>102)||0)||0)||(p (3=>30)||0)||0)||(p (5=>52)||0)||(p (6=>63)||p ("\0x6"=>602)||0)||0
all p d;
((((p (4=>40)&&p (2=>22))&&p (1=>13)&&p ("\0x1"=>102))&&p (3=>30))&&p (5=>52))&&p (6=>63)&&p ("\0x6"=>602)
"---------------";
"---------------"
list (mstream d);
[1=>[13],"\0x1"=>[102],2=>[22],3=>[30],4=>[40],5=>[52],6=>[63],"\0x6"=>[602]]
list (revmstream d);
["\0x6"=>[602],6=>[63],5=>[52],4=>[40],3=>[30],2=>[22],"\0x1"=>[102],1=>[13]]
mfoldl g a d;
g (g (g (g (g (g (g (g a (1=>[13])) ("\0x1"=>[102])) (2=>[22])) (3=>[30])) (4=>[40])) (5=>[52])) (6=>[63])) ("\0x6"=>[602])
mfoldl1 g d;
g (g (g (g (g (g (g (1=>[13]) ("\0x1"=>[102])) (2=>[22])) (3=>[30])) (4=>[40])) (5=>[52])) (6=>[63])) ("\0x6"=>[602])
mfoldr g a d;
g (1=>[13]) (g ("\0x1"=>[102]) (g (2=>[22]) (g (3=>[30]) (g (4=>[40]) (g (5=>[52]) (g (6=>[63]) (g ("\0x6"=>[602]) a)))))))
mfoldr1 g d;
g (1=>[13]) (g ("\0x1"=>[102]) (g (2=>[22]) (g (3=>[30]) (g (4=>[40]) (g (5=>[52]) (g (6=>[63]) ("\0x6"=>[602])))))))
many p d;
(p (4=>[40])||0)||((p (2=>[22])||0)||((p (1=>[13])||p ("\0x1"=>[102])||0)||0)||(p (3=>[30])||0)||0)||(p (5=>[52])||0)||(p (6=>[63])||p ("\0x6"=>[602])||0)||0
mall p d;
((((p (4=>[40])&&p (2=>[22]))&&p (1=>[13])&&p ("\0x1"=>[102]))&&p (3=>[30]))&&p (5=>[52]))&&p (6=>[63])&&p ("\0x6"=>[602])
let d = dhm;
members d;
[1=>11,1=>12,1=>13,"\0x1"=>101,"\0x1"=>102,2=>21,2=>22,3=>30,4=>40,5=>51,5=>52,6=>61,6=>62,6=>63,"\0x6"=>601,"\0x6"=>602]
list (stream d);
[1=>11,1=>12,1=>13,"\0x1"=>101,"\0x1"=>102,2=>21,2=>22,3=>30,4=>40,5=>51,5=>52,6=>61,6=>62,6=>63,"\0x6"=>601,"\0x6"=>602]
list (revstream d);
["\0x6"=>602,"\0x6"=>601,6=>63,6=>62,6=>61,5=>52,5=>51,4=>40,3=>30,2=>22,2=>21,"\0x1"=>102,"\0x1"=>101,1=>13,1=>12,1=>11]
foldl f a d;
(((((((((((((((a:(1=>11)):(1=>12)):(1=>13)):("\0x1"=>101)):("\0x1"=>102)):(2=>21)):(2=>22)):(3=>30)):(4=>40)):(5=>51)):(5=>52)):(6=>61)):(6=>62)):(6=>63)):("\0x6"=>601)):("\0x6"=>602)
foldl1 f d;
(((((((((((((((1=>11):(1=>12)):(1=>13)):("\0x1"=>101)):("\0x1"=>102)):(2=>21)):(2=>22)):(3=>30)):(4=>40)):(5=>51)):(5=>52)):(6=>61)):(6=>62)):(6=>63)):("\0x6"=>601)):("\0x6"=>602)
foldr f a d;
(1=>11):(1=>12):(1=>13):("\0x1"=>101):("\0x1"=>102):(2=>21):(2=>22):(3=>30):(4=>40):(5=>51):(5=>52):(6=>61):(6=>62):(6=>63):("\0x6"=>601):("\0x6"=>602):a
foldr1 f d;
(1=>11):(1=>12):(1=>13):("\0x1"=>101):("\0x1"=>102):(2=>21):(2=>22):(3=>30):(4=>40):(5=>51):(5=>52):(6=>61):(6=>62):(6=>63):("\0x6"=>601):("\0x6"=>602)
any p d;
(p (4=>40)||0)||((p (2=>21)||p (2=>22)||0)||((p (1=>11)||p (1=>12)||p (1=>13)||p ("\0x1"=>101)||p ("\0x1"=>102)||0)||0)||(p (3=>30)||0)||0)||(p (5=>51)||p (5=>52)||0)||(p (6=>61)||p (6=>62)||p (6=>63)||p ("\0x6"=>601)||p ("\0x6"=>602)||0)||0
all p d;
((((p (4=>40)&&p (2=>21)&&p (2=>22))&&(((p (1=>11)&&p (1=>12))&&p (1=>13))&&p ("\0x1"=>101))&&p ("\0x1"=>102))&&p (3=>30))&&p (5=>51)&&p (5=>52))&&(((p (6=>61)&&p (6=>62))&&p (6=>63))&&p ("\0x6"=>601))&&p ("\0x6"=>602)
"---------------";
"---------------"
list (mstream d);
[1=>[11,12,13],"\0x1"=>[101,102],2=>[21,22],3=>[30],4=>[40],5=>[51,52],6=>[61,62,63],"\0x6"=>[601,602]]
list (revmstream d);
["\0x6"=>[602,601],6=>[63,62,61],5=>[52,51],4=>[40],3=>[30],2=>[22,21],"\0x1"=>[102,101],1=>[13,12,11]]
mfoldl g a d;
g (g (g (g (g (g (g (g a (1=>[11,12,13])) ("\0x1"=>[101,102])) (2=>[21,22])) (3=>[30])) (4=>[40])) (5=>[51,52])) (6=>[61,62,63])) ("\0x6"=>[601,602])
mfoldl1 g d;
g (g (g (g (g (g (g (1=>[11,12,13]) ("\0x1"=>[101,102])) (2=>[21,22])) (3=>[30])) (4=>[40])) (5=>[51,52])) (6=>[61,62,63])) ("\0x6"=>[601,602])
mfoldr g a d;
g (1=>[11,12,13]) (g ("\0x1"=>[101,102]) (g (2=>[21,22]) (g (3=>[30]) (g (4=>[40]) (g (5=>[51,52]) (g (6=>[61,62,63]) (g ("\0x6"=>[601,602]) a)))))))
mfoldr1 g d;
g (1=>[11,12,13]) (g ("\0x1"=>[101,102]) (g (2=>[21,22]) (g (3=>[30]) (g (4=>[40]) (g (5=>[51,52]) (g (6=>[61,62,63]) ("\0x6"=>[601,602])))))))
many p d;
(p (4=>[40])||0)||((p (2=>[21,22])||0)||((p (1=>[11,12,13])||p ("\0x1"=>[101,102])||0)||0)||(p (3=>[30])||0)||0)||(p (5=>[51,52])||0)||(p (6=>[61,62,63])||p ("\0x6"=>[601,602])||0)||0
mall p d;
((((p (4=>[40])&&p (2=>[21,22]))&&p (1=>[11,12,13])&&p ("\0x1"=>[101,102]))&&p (3=>[30]))&&p (5=>[51,52]))&&p (6=>[61,62,63])&&p ("\0x6"=>[601,602])
